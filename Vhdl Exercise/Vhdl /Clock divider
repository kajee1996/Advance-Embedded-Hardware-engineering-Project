library ieee;
use ieee.std_logic_1164.all;

entity ClockDivider is
  port (
    clk_in : in std_logic;
    reset : in std_logic
    
  );
end entity ClockDivider;

architecture Behavioral of ClockDivider is
  signal counter : integer range 0 to 10 := 0; -- Divide 50 MHz clock by 2
  signal clk_out : std_logic := '0';
  constant DIVIDER_VALUE : integer := 10; -- Divide factor (50 MHz / (DIVIDER_VALUE + 1))

begin
  process (clk_in, reset)
  begin
    if reset = '1' then
      counter <= 0;
      clk_out <= '0';
    elsif rising_edge(clk_in) then
      if counter = DIVIDER_VALUE then
        counter <= 0;
        clk_out <= not clk_out;
      else
        counter <= counter + 1;
      end if;
    end if;
  end process;
end architecture Behavioral;
