#include <WiFiNINA.h>
#include <PubSubClient.h>
#include <stdio.h>


const char* ssid = "Kajee06";
const char* password = "kajee19960106";
const char* mqtt_server = "192.168.186.1";
const int mqtt_port = 1883;
const char* mqtt_username = "kajee";
const char* mqtt_password = "1234";

int trigPin = 12;
int echoPin = 13;

int trigPin1 = 2;
int echoPin1 = 3;

long duration;
int distance; 

long duration1;
int distance1; 

int LED_GREEN = 7;
int LED_RED = 6;

int LED_GREEN1 =9 ;
int LED_RED1 = 10;


WiFiClient wifiClient;
PubSubClient client(wifiClient);

void setup() {

  



  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

    pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);

    pinMode(LED_GREEN, OUTPUT);
  pinMode(LED_RED, OUTPUT);

      pinMode(LED_GREEN1, OUTPUT);
  pinMode(LED_RED1, OUTPUT);

  Serial.begin(9600);
  delay(10);

  
  
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  client.setServer(mqtt_server, mqtt_port);

  while (!client.connected())
  {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("arduinoClient", mqtt_username, mqtt_password)) 
    {
      Serial.println("connected");
    }
    else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
         }
  }
}

void loop() {
  // Trigger the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Measure the duration of the echo pulse
  duration = pulseIn(echoPin, HIGH);

  // Calculate distance in centimeters
  distance = duration * 0.034 / 2;

  // Print the distance to the serial monitor
  Serial.print("Distance1: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Wait for a short delay before taking the next measurement
  delay(500);

  // Trigger the ultrasonic sensor
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);

  // Measure the duration of the echo pulse
  duration1 = pulseIn(echoPin1, HIGH);

  // Calculate distance in centimeters
  distance1 = duration1 * 0.034 / 2;

  // Print the distance to the serial monitor
  Serial.print("Distance: ");
  Serial.print(distance1);
  Serial.println(" cm");

  // Wait for a short delay before taking the next measurement
  delay(500);

  if(distance1 <= 10)
   {
  
  client.publish("mytopic1","Park1 occupied");
  delay(50);
   digitalWrite (LED_RED,HIGH);
      digitalWrite(LED_GREEN,LOW);
      delay(500); 
 
   }
  else{
    client.publish("mytopic1","Park1 not occupied");
    delay(50);
       digitalWrite (LED_RED,LOW);
      digitalWrite(LED_GREEN,HIGH);
      delay(500); 
      }

  if(distance <= 10)
   {
  
  client.publish("mytopic2","Park1 occupied");
  delay(20);
   //digitalWrite (LED_RED1,HIGH);
    digitalWrite(LED_GREEN1,HIGH);
     delay(100); 
   }
  else{
    client.publish("mytopic2","Park1 not occupied");
    delay(20);
    //digitalWrite (LED_RED1,LOW);
      digitalWrite(LED_GREEN1,LOW);
      delay(100);
      } 


}
